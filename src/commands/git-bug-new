#!/usr/bin/env sh

get_git_dir()
{
	local dir="$PWD"
	until [ -d ./.git ]; do cd ..; if [ "$PWD" = "$dir" ]; then exit 1; fi; local dir="$PWD"; done; echo "$PWD/.git";
	#Не совсем уверен как проверять невозможность поднятся выше, поэтому такой вот костыль
}

git_bug_new()
{
	REF="refs/heads/ISSUES"

	local GIT_DIR="$(get_git_dir)"
	if [ "$GIT_DIR" = "" ]
	then
		echo "Error: There's nothing here"
		exit 1
	fi
	
	local FILE="$GIT_DIR/ISSUE_EDIT"

	if [ "$1" = "-m" -a "$#" -ge 2 ]
	then
		echo "$2" > $FILE
	else
		"${EDITOR:-vi}" $FILE
	fi

	[ ! -f "$FILE" ] && exit 0

	local LINE="$(echo $(sed -n 1p $FILE | awk '$1 != "" {print $0}'))"

	if [ "$LINE" = "" ]
	then
		rm -f "$FILE"
		exit 0
	fi

	[ -f "$GIT_DIR/index" ] && mv -f "$GIT_DIR/index" "$GIT_DIR/index$$"

	local STATUS=$(echo open | git hash-object -w --stdin)
	local SUMMARY=$(echo "$LINE" | git hash-object -w --stdin)
	local DESCRIPTION=$(sed -i 1d $FILE | git hash-object -w $FILE 2>/dev/null)

	git update-index --add --cacheinfo 100644 $STATUS status
	git update-index --add --cacheinfo 100644 $SUMMARY summary
	git update-index --add --cacheinfo 100644 $DESCRIPTION description
	local TREE=$(git write-tree)
	git rm status >/dev/null 2>&1
	git rm summary >/dev/null 2>&1
	git rm description >/dev/null 2>&1
	
	local ISSUE=$(echo issue | git commit-tree $TREE)
	echo $ISSUE	

	local HASH=`echo $ISSUE | git hash-object -w --stdin`
	if git show-ref --quiet --verify $REF
	then
		git read-tree $REF^{tree}
		git update-index --add --cacheinfo 120000 $HASH $ISSUE
		local TREE=`git write-tree`
		local ISSUES=`echo issues | git commit-tree $TREE -p $REF`
	else
		git update-index --add --cacheinfo 120000 $HASH $ISSUE
		local TREE=`git write-tree`
		local ISSUES=`echo issues | git commit-tree $TREE`
	fi
	git update-ref $REF $ISSUES

	rm -f "$GIT_DIR/index"
	[ -f "$GIT_DIR/index$$" ] && mv -f "$GIT_DIR/index$$" "$GIT_DIR/index"

	rm -f "$FILE"
}

git_bug_new "$@"
